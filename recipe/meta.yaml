{% set name = "kiwipy" %}
{% set version = "0.3.3" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "8d5fcb86779e5b6d957a2a5730275266e28dec6b71d72c604bbac84bd946d618" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python -m pip install --no-deps --ignore-installed .

requirements:
  host:
    - python
    - pip
    - setuptools

  run:
    - python
    - six
    - typing  # [py < 35]
    - enum34  # [py < 34]
    - backports.tempfile  # [py < 32]
    - futures  # [py < 32]
    # include dependencies for 'rmq' extra
    - pika >=1.0.0b1
    - topika >=0.1.2
    - tornado >=4  # [py2k]
    - tornado <5  # [not py2k]
    - pyyaml

test:
  imports:
    - kiwipy
    - kiwipy.rmq

  source_files:
   - test

about:
  home: https://github.com/muhrin/kiwipy
  license: MIT or GPLv3
  license_family: MIT
  license_file: 'LICENSE'
  summary: A python remote communications library
  description: |
        kiwipy is a library that makes remote messaging using RabbitMQ (and any
        other protocol for which a backend is written) EASY. I don't know about
        you but I find RabbitMQ HARD. It's all too easy to make a configuration
        mistake which is then difficult to debug. With kiwipy, there's none of
        this, just messaging, made simple, with all the nice properties and
        guarantees of AMQP.
  doc_url: https://github.com/muhrin/kiwipy
  dev_url: https://github.com/muhrin/kiwipy

extra:
  recipe-maintainers:
    - ltalirz
    - muhrin
